<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\xunit.core.2.4.1\build\xunit.core.props" Condition="Exists('..\packages\xunit.core.2.4.1\build\xunit.core.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{7ACA6887-4F8A-4544-BF55-D55B7A116D8E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>OBeautifulCode.Representation.System.Test</RootNamespace>
    <AssemblyName>OBeautifulCode.Representation.System.Test</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>OBeautifulCodeRepresentationSolution</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>OBeautifulCodeRepresentationSolution</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet />
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="AutoFixture, Version=4.11.0.0, Culture=neutral, PublicKeyToken=b24654c590009d4f, processorArchitecture=MSIL">
      <HintPath>..\packages\AutoFixture.4.11.0\lib\net452\AutoFixture.dll</HintPath>
    </Reference>
    <Reference Include="Castle.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL">
      <HintPath>..\packages\Castle.Core.5.1.1\lib\net462\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="Conditions, Version=2.1.0.24, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Conditions.2.1.0\lib\portable-net45+win+wpa81+wp80+MonoAndroid10+MonoTouch10\Conditions.dll</HintPath>
    </Reference>
    <Reference Include="FakeItEasy, Version=8.0.0.0, Culture=neutral, PublicKeyToken=eff28e2146d5fd2c, processorArchitecture=MSIL">
      <HintPath>..\packages\FakeItEasy.8.3.0\lib\net462\FakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="Fare, Version=2.1.0.0, Culture=neutral, PublicKeyToken=ea68d375bf33a7c8, processorArchitecture=MSIL">
      <HintPath>..\packages\Fare.2.1.2\lib\net35\Fare.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.AutoFakeItEasy, Version=1.0.141.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.AutoFakeItEasy.1.0.141\lib\net462\OBeautifulCode.AutoFakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="OBeautifulCode.Type, Version=1.0.135.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OBeautifulCode.Type.1.0.135\lib\net462\OBeautifulCode.Type.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Drawing" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.abstractions.2.0.3\lib\net35\xunit.abstractions.dll</HintPath>
    </Reference>
    <Reference Include="xunit.assert, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.assert.2.4.1\lib\netstandard1.1\xunit.assert.dll</HintPath>
    </Reference>
    <Reference Include="xunit.core, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.core.2.4.1\lib\net452\xunit.core.dll</HintPath>
    </Reference>
    <Reference Include="xunit.execution.desktop, Version=2.4.1.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.execution.2.4.1\lib\net452\xunit.execution.desktop.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include=".recipes\OBeautifulCode.Assertion\Actions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ApplyBecause.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionKind.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionTracker.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionTrackerShould.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\AssertionVerificationFailedException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Delegates.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ImproperUseOfAssertionFrameworkException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Range.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\TestAssertionVerificationFailedException.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\TypeValidation.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\ValidatedNotNullAttribute.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\VerifiableItem.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verification.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\VerificationParameter.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Helpers.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Internal.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Strings.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Throw.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.TypeValidation.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\Verifications.Workflow.cs" />
    <Compile Include=".recipes\OBeautifulCode.Assertion\WorkflowExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.AutoFakeItEasy\AutoFakeItEasyBootstrapper.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeAnalysis\ObcSuppressBecause.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ComparableTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ComparableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Comparable\ValidatedComparableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ConstructorArgumentValidationTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ConstructorArgumentValidationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorArgumentValidation\ValidatedConstructorArgumentValidationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\CompareActualToExpectedUsing.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ConstructorPropertyAssignmentTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ConstructorPropertyAssignmentTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\SystemUnderTestExpectedPropertyValue{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\ConstructorPropertyAssignment\ValidatedConstructorPropertyAssignmentTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\DeepCloneWithTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\DeepCloneWithTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\SystemUnderTestDeepCloneWithValue{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\DeepCloneWith\ValidatedDeepCloneWithTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\EquatableTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\EquatableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\Equatable\ValidatedEquatableTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\StringRepresentationTestScenarios{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\StringRepresentationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\SystemUnderTestExpectedStringRepresentation{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.CodeGen\StringRepresentation\ValidatedStringRepresentationTestScenario{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.Collection\EnumerableExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Enum\EnumExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ByteArrayEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ColorEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\DateTimeEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\DictionaryEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EnumerableEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EnumerableEqualityComparerStrategy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EqualityComparerHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\EqualityExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\HashCodeHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\LambdaBackedEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NativeMethods.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NullableColorEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\NullableDateTimeEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ObjectEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ReadOnlyDictionaryEqualityComparer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Equality\ReferenceEqualityComparer{T}.cs" />
    <Compile Include=".recipes\OBeautifulCode.Math\ThreadSafeRandom.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AccessModifier.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AppDomainHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AssemblyHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\AssemblyLoader.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\BindingFlagsFor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\CompressionMethod.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ConstructorsMatchedToPropertiesStrategy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\DisposableAppDomain.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberAccessModifiers.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberAttributes.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberKinds.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberMutability.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberOwners.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\MemberRelationships.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\OrderMembersBy.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Attribute.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Constructor.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Enum.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Field.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.MemberInfo.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Method.cs" />
    <Compile Include=".recipes\OBeautifulCode.Reflection\ReflectionHelper.Property.cs" />
    <Compile Include=".recipes\OBeautifulCode.String\StringExtensions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ArrayKind.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ToStringReadableOptions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\ToStringXmlDocOptions.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeDummyFactory.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeDummyFactory.designer.cs" />
    <Compile Include=".recipes\OBeautifulCode.Type\TypeExtensions.cs" />
    <Compile Include="Assembly\AssemblyRepresentationTest.cs" />
    <Compile Include="Assembly\AssemblyRepresentationTest.designer.cs">
      <DependentUpon>AssemblyRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\ConstantExpressionRepresentation{T}Test.cs" />
    <Compile Include="Expression\Expressions\ConstantExpressionRepresentation{T}Test.designer.cs">
      <DependentUpon>ConstantExpressionRepresentation{T}Test.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Bindings\ElementInitRepresentationTest.designer.cs">
      <DependentUpon>ElementInitRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Bindings\MemberAssignmentRepresentationTest.designer.cs">
      <DependentUpon>MemberAssignmentRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Bindings\MemberBindingRepresentationBaseTest.designer.cs">
      <DependentUpon>MemberBindingRepresentationBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Bindings\MemberListBindingRepresentationTest.designer.cs">
      <DependentUpon>MemberListBindingRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Bindings\MemberMemberBindingRepresentationTest.designer.cs">
      <DependentUpon>MemberMemberBindingRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\BinaryExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\BinaryExpressionRepresentationTest.designer.cs">
      <DependentUpon>BinaryExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\ConditionalExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\ConditionalExpressionRepresentationTest.designer.cs">
      <DependentUpon>ConditionalExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\ExpressionRepresentationBaseTest.designer.cs">
      <DependentUpon>ExpressionRepresentationBaseTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\InvocationExpressionRepresentationTest.designer.cs">
      <DependentUpon>InvocationExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\LambdaExpressionRepresentationTest.designer.cs">
      <DependentUpon>LambdaExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\ListInitExpressionRepresentationTest.designer.cs">
      <DependentUpon>ListInitExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\MemberExpressionRepresentationTest.designer.cs">
      <DependentUpon>MemberExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\MemberInitExpressionRepresentationTest.designer.cs">
      <DependentUpon>MemberInitExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\MethodCallExpressionRepresentationTest.designer.cs">
      <DependentUpon>MethodCallExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\NewArrayExpressionRepresentationTest.designer.cs">
      <DependentUpon>NewArrayExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\NewExpressionRepresentationTest.designer.cs">
      <DependentUpon>NewExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\ParameterExpressionRepresentationTest.designer.cs">
      <DependentUpon>ParameterExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\TypeBinaryExpressionRepresentationTest.designer.cs">
      <DependentUpon>TypeBinaryExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\UnaryExpressionRepresentationTest.designer.cs">
      <DependentUpon>UnaryExpressionRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\ProjectInfo.cs" />
    <Compile Include="TypeMember\ConstructorInfoRepresentationTest.cs" />
    <Compile Include="Expression\Bindings\ElementInitRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\ExpressionRepresentationBaseTest.cs" />
    <Compile Include="Expression\Expressions\InvocationExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\LambdaExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\ListInitExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Bindings\MemberAssignmentRepresentationTest.cs" />
    <Compile Include="Expression\Bindings\MemberBindingRepresentationBaseTest.cs" />
    <Compile Include="Expression\Expressions\MemberExpressionRepresentationTest.cs" />
    <Compile Include="TypeMember\ConstructorInfoRepresentationTest.designer.cs">
      <DependentUpon>ConstructorInfoRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeMember\MemberInfoRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\MemberInitExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Bindings\MemberListBindingRepresentationTest.cs" />
    <Compile Include="Expression\Bindings\MemberMemberBindingRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\MethodCallExpressionRepresentationTest.cs" />
    <Compile Include="TypeMember\MemberInfoRepresentationTest.designer.cs">
      <DependentUpon>MemberInfoRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeMember\MethodInfoRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\NewArrayExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\NewExpressionRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\ParameterExpressionRepresentationTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="RepresentationSystemDummyFactory.cs" />
    <Compile Include="RepresentationSystemDummyFactory.designer.cs">
      <DependentUpon>RepresentationSystemDummyFactory.cs</DependentUpon>
    </Compile>
    <Compile Include="RepresentationSystemDummyFactoryTest.cs" />
    <Compile Include="RepresentationSystemDummyFactoryTest.designer.cs">
      <DependentUpon>RepresentationSystemDummyFactoryTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Expression\Expressions\TypeBinaryExpressionRepresentationTest.cs" />
    <Compile Include="TypeMember\MethodInfoRepresentationTest.designer.cs">
      <DependentUpon>MethodInfoRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Type\TypeGenerator.cs" />
    <Compile Include="Type\TypeRepresentationExtensionsTest.cs" />
    <Compile Include="Type\VersionlessTypeEqualityComparerTest.cs" />
    <Compile Include="Type\VersionlessTypeRepresentationEqualityComparerTest.cs" />
    <Compile Include="Type\TypeRepresentationTest.cs" />
    <Compile Include="Expression\Expressions\UnaryExpressionRepresentationTest.cs" />
    <Compile Include="Type\TypeRepresentationTest.designer.cs">
      <DependentUpon>TypeRepresentationTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Type\UnknownTypePlaceholderTest.cs" />
    <Compile Include="Type\UnknownTypePlaceholderTest.designer.cs">
      <DependentUpon>UnknownTypePlaceholderTest.cs</DependentUpon>
    </Compile>
    <AdditionalFiles Include=".analyzers\stylecop.json" />
    <None Include=".analyzers\test.ruleset" />
    <None Include="DummyFactory.recipe-nuspec" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Analyzer Include="..\packages\StyleCop.Analyzers.1.1.118\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll" />
    <Analyzer Include="..\packages\StyleCop.Analyzers.1.1.118\analyzers\dotnet\cs\StyleCop.Analyzers.dll" />
    <Analyzer Include="..\packages\xunit.analyzers.0.10.0\analyzers\dotnet\cs\xunit.analyzers.dll" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\OBeautifulCode.Representation.System\OBeautifulCode.Representation.System.csproj">
      <Project>{bc07f36d-996a-458e-82fa-40f2cc341e01}</Project>
      <Name>OBeautifulCode.Representation.System</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="nuget-icon.png" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Type\Conditions.dll" />
  </ItemGroup>
  <ItemGroup>
    <Content Include=".analyzers\dictionary.xml" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\xunit.core.2.4.1\build\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.4.1\build\xunit.core.props'))" />
    <Error Condition="!Exists('..\packages\xunit.core.2.4.1\build\xunit.core.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.4.1\build\xunit.core.targets'))" />
    <Error Condition="!Exists('..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets'))" />
  </Target>
  <Import Project="..\packages\xunit.core.2.4.1\build\xunit.core.targets" Condition="Exists('..\packages\xunit.core.2.4.1\build\xunit.core.targets')" />
  <Import Project="..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets" Condition="Exists('..\packages\OBeautifulCode.Build.Analyzers.1.1.139\build\OBeautifulCode.Build.Analyzers.targets')" />
</Project>